version: 2.1

executors:
  clojurecli:
    docker:
      - image: circleci/clojure:openjdk-8-tools-deps-node-browsers
    working_directory: /home/circleci/replikativ
  clojurecli-postgresql:
    docker:
      - image: circleci/clojure:openjdk-8-tools-deps-node-browsers
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: alice
          POSTGRES_PASSWORD: foo
          POSTGRES_DB: config-test

jobs:
  setup:
    executor: clojurecli
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}
            - source-
      - checkout
      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - .git
      - restore_cache:
          keys:
            - deps-{{ checksum "deps.edn" }}
            - deps-
      - run: clojure -e nil
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
      - restore_cache:
          keys:
            - npm-{{ checksum "package.json" }}
            - npm-
      - run: npm ci
      - save_cache:
          key: npm-{{ checksum "package.json" }}
          paths:
            - /home/circleci/.npm
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - .m2
            - .npm
            - replikativ
      - run: sudo apt-get install libxml2-utils

  format:
    executor: clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Format
          command: lein cljfmt check
          no_output_timeout: 5m


  unittest:
    executor: clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run Unittests
          command: ./bin/run-unittests
          no_output_timeout: 5m

  browsertest:
    executor: clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run CLJS tests
          command: ./bin/run-cljstests
          no_output_timeout: 5m

  integrationtest:
    executor: clojurecli-postgresql
    steps: 
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run Integrationtests
          command: ./bin/run-integrationtests
          no_output_timeout: 5m

  build:
    executor: clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Build
          command: clojure -A:uberjar
          no_output_timeout: 5m

  deploy-snapshot:
    executor: clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          command: |
            VERSION=$(xmllint --xpath '/*[local-name()="project"]/*[local-name()="version"]/text()' pom.xml)
            if [[ ${VERSION} =~ .*-SNAPSHOT ]]; then
                clojure -A:deploy
            else
                exit 0
            fi

  deploy-release:
    executor: clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Deploy Release to Clojars
          command: |
            VERSION=$(head -n 1 project.clj | awk '{print $3}' | tr -d \")
            if [[ ${VERSION} =~ .*-SNAPSHOT ]]; then
                exit 0
            else
                clojure -A:deploy
            fi

workflows:
  build_test_and_deploy:
    jobs:
      - setup
        #- format:
        #    requires:
        #      - setup
      - unittest:
          requires:
            - setup
      - integrationtest:
          requires:
            - setup
      - browsertest:
          requires:
            - setup
      - build:
          requires:
            - setup
      - deploy-snapshot:
          filters:
            branches:
              only: development
          requires:
            - setup
            - unittest
            - integrationtest
            - browsertest
            - build
      - deploy-release:
          filters:
            branches:
              only: master
          requires:
            - setup
            - unittest
            - integrationtest
            - browsertest
            - build
