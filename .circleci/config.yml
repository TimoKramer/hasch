version: 2.1

executors:
  toolsdeps:
    docker:
      - image: circleci/clojure:openjdk-8-tools-deps-node-browsers
    working_directory: /home/circleci/replikativ

jobs:
  setup:
    executor: toolsdeps
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}
            - source-
      - checkout
      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - .git
      - restore_cache:
          keys:
            - deps-{{ checksum "deps.edn" }}
            - deps-
      - run: clojure -e nil
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
      - restore_cache:
          keys:
            - npm-{{ checksum "package.json" }}
            - npm-
      - run: npm ci
      - save_cache:
          key: npm-{{ checksum "package.json" }}
          paths:
            - /home/circleci/.npm
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - .m2
            - .npm
            - replikativ

  unittest:
    executor: toolsdeps
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run Unittests
          command: ./bin/run-unittests
          no_output_timeout: 5m

  browsertest:
    executor: toolsdeps
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run Browsertests
          command: ./bin/run-browsertests
          no_output_timeout: 5m

  build:
    executor: toolsdeps
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Build
          command: deps -A:uberjar
          no_output_timeout: 5m

  deploy-snapshot:
    executor: leiningen
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          command: |
            VERSION=$(head -n 1 project.clj | awk '{print $3}' | tr -d \")
            if [[ ${VERSION} =~ .*-SNAPSHOT ]]; then
                clj -A:deploy
            else
                exit 0
            fi

  deploy-release:
    executor: leiningen
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Deploy Release to Clojars
          command: |
            VERSION=$(head -n 1 project.clj | awk '{print $3}' | tr -d \")
            if [[ ${VERSION} =~ .*-SNAPSHOT ]]; then
                exit 0
            else
                clj -A:deploy
            fi

workflows:
  build_test_and_deploy:
    jobs:
      - setup
      - unittest:
          requires:
            - setup
      - integrationtest:
          requires:
            - setup
      - build:
          requires:
            - setup
      - deploy-snapshot:
          filters:
            branches:
              only: development
          requires:
            - setup
            - unittest
            - integrationtest
            - build
      - deploy-release:
          filters:
            branches:
              only: master
          requires:
            - setup
            - unittest
            - integrationtest
            - build
